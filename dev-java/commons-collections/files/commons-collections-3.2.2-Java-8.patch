diff -Nur a/src/java/org/apache/commons/collections/map/MultiKeyMap.java b/src/java/org/apache/commons/collections/map/MultiKeyMap.java
--- a/src/java/org/apache/commons/collections/map/MultiKeyMap.java	2015-11-13 06:25:19.000000000 +0800
+++ b/src/java/org/apache/commons/collections/map/MultiKeyMap.java	2020-07-06 13:38:10.915319750 +0800
@@ -197,7 +197,7 @@
      * @param key2  the second key
      * @return the value mapped to the removed key, null if key not in map
      */
-    public Object remove(Object key1, Object key2) {
+    public Object removeMultiKey(Object key1, Object key2) {
         int hashCode = hash(key1, key2);
         int index = map.hashIndex(hashCode, map.data.length);
         AbstractHashedMap.HashEntry entry = map.data[index];
diff -Nur a/src/java/org/apache/commons/collections/map/MultiValueMap.java b/src/java/org/apache/commons/collections/map/MultiValueMap.java
--- a/src/java/org/apache/commons/collections/map/MultiValueMap.java	2015-11-13 06:25:19.000000000 +0800
+++ b/src/java/org/apache/commons/collections/map/MultiValueMap.java	2020-07-06 13:38:10.916319750 +0800
@@ -153,7 +153,7 @@
      * @param value the value to remove
      * @return the value removed (which was passed in), null if nothing removed
      */
-    public Object remove(Object key, Object value) {
+    public Object removeMapping(Object key, Object value) {
         Collection valuesForKey = getCollection(key);
         if (valuesForKey == null) {
             return null;
diff -Nur a/src/java/org/apache/commons/collections/MultiHashMap.java b/src/java/org/apache/commons/collections/MultiHashMap.java
--- a/src/java/org/apache/commons/collections/MultiHashMap.java	2015-11-13 06:25:20.000000000 +0800
+++ b/src/java/org/apache/commons/collections/MultiHashMap.java	2020-07-06 13:38:10.916319750 +0800
@@ -331,7 +331,7 @@
      * @param item  the value to remove
      * @return the value removed (which was passed in), null if nothing removed
      */
-    public Object remove(Object key, Object item) {
+    public Object removeMapping(Object key, Object item) {
         Collection valuesForKey = getCollection(key);
         if (valuesForKey == null) {
             return null;
diff -Nur a/src/java/org/apache/commons/collections/MultiMap.java b/src/java/org/apache/commons/collections/MultiMap.java
--- a/src/java/org/apache/commons/collections/MultiMap.java	2015-11-13 06:25:19.000000000 +0800
+++ b/src/java/org/apache/commons/collections/MultiMap.java	2020-07-06 13:41:54.891317573 +0800
@@ -66,7 +66,7 @@
      * @throws ClassCastException if the key or value is of an invalid type
      * @throws NullPointerException if the key or value is null and null is invalid
      */
-    public Object remove(Object key, Object item);
+    public Object removeMapping(Object key, Object item);
 
     //-----------------------------------------------------------------------
     /**
