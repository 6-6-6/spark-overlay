From 0dbcb3d9aa5c5ef8c0631190267c12c573d4ebcf Mon Sep 17 00:00:00 2001
From: Yuan Liao <liaoyuan@gmail.com>
Date: Wed, 16 Feb 2022 23:37:23 -0800
Subject: [PATCH] Migrate from Log4j 1.2 to log4j-1.2-api bridge from Log4j 2

Signed-off-by: Yuan Liao <liaoyuan@gmail.com>
---
 .../velocity/runtime/log/Log4JLogChute.java   | 50 ++++++++++---------
 .../runtime/log/SimpleLog4JLogSystem.java     | 31 +++++++++---
 2 files changed, 50 insertions(+), 31 deletions(-)

diff --git a/src/java/org/apache/velocity/runtime/log/Log4JLogChute.java b/src/java/org/apache/velocity/runtime/log/Log4JLogChute.java
index 0bfe6a3..34a684f 100644
--- a/src/java/org/apache/velocity/runtime/log/Log4JLogChute.java
+++ b/src/java/org/apache/velocity/runtime/log/Log4JLogChute.java
@@ -21,10 +21,17 @@ package org.apache.velocity.runtime.log;
 
 import java.io.IOException;
 import java.lang.reflect.Field;
+import java.util.Properties;
+
+import org.apache.log4j.Appender;
 import org.apache.log4j.Level;
 import org.apache.log4j.Logger;
-import org.apache.log4j.PatternLayout;
-import org.apache.log4j.RollingFileAppender;
+import org.apache.log4j.builders.appender.AppenderBuilder;
+import org.apache.log4j.builders.appender.RollingFileAppenderBuilder;
+import org.apache.log4j.config.PropertiesConfiguration;
+import org.apache.log4j.config.PropertiesConfigurationFactory;
+import org.apache.logging.log4j.core.LoggerContext;
+import org.apache.logging.log4j.core.config.ConfigurationSource;
 import org.apache.velocity.runtime.RuntimeConstants;
 import org.apache.velocity.runtime.RuntimeServices;
 import org.apache.velocity.util.ExceptionUtils;
@@ -49,7 +56,7 @@ public class Log4JLogChute implements LogChute
 
     private RuntimeServices rsvc = null;
     private boolean hasTrace = false;
-    private RollingFileAppender appender = null;
+    private Appender appender = null;
 
     /**
      * <a href="http://jakarta.apache.org/log4j/">Log4J</a> logging API.
@@ -109,29 +116,26 @@ public class Log4JLogChute implements LogChute
     }
 
     // This tries to create a file appender for the specified file name.
-    private void initAppender(String file) throws Exception
+    private void initAppender(String file)
     {
-        try
-        {
-            // to add the appender
-            PatternLayout layout = new PatternLayout("%d - %m%n");
-            this.appender = new RollingFileAppender(layout, file, true);
+        String name = (String)rsvc.getProperty(RUNTIME_LOG_LOG4J_LOGGER);
+        Properties props = new Properties();
+        props.setProperty("File", file);
+        props.setProperty("Threshold", rsvc.getString(RUNTIME_LOG_LOG4J_LOGGER_LEVEL));
+        props.setProperty("MaxBackupIndex", "1");
+        props.setProperty("MaxFileSize", "100000");
+        AppenderBuilder appenderBuilder = new RollingFileAppenderBuilder("", props);
+        PropertiesConfiguration configuration = (PropertiesConfiguration)
+                new PropertiesConfigurationFactory().getConfiguration(
+                        new LoggerContext(name), ConfigurationSource.NULL_SOURCE);
 
-            // if we successfully created the file appender,
-            // configure it and set the logger to use only it
-            appender.setMaxBackupIndex(1);
-            appender.setMaximumFileSize(100000);
+        appender = appenderBuilder.parseAppender(name, "", "", "",
+                props, configuration);
 
-            // don't inherit appenders from higher in the logger heirarchy
-            logger.setAdditivity(false);
-            logger.addAppender(appender);
-            log(DEBUG_ID, "Log4JLogChute initialized using file '"+file+'\'');
-        }
-        catch (IOException ioe)
-        {
-            rsvc.getLog().error("Could not create file appender '"+file+'\'', ioe);
-            throw ExceptionUtils.createRuntimeException("Error configuring Log4JLogChute : ", ioe);
-        }
+        // don't inherit appenders from higher in the logger heirarchy
+        logger.setAdditivity(false);
+        logger.addAppender(appender);
+        log(DEBUG_ID, "Log4JLogChute initialized using file '"+file+'\'');
     }
 
     /**
diff --git a/src/java/org/apache/velocity/runtime/log/SimpleLog4JLogSystem.java b/src/java/org/apache/velocity/runtime/log/SimpleLog4JLogSystem.java
index 36b2cea..402c443 100644
--- a/src/java/org/apache/velocity/runtime/log/SimpleLog4JLogSystem.java
+++ b/src/java/org/apache/velocity/runtime/log/SimpleLog4JLogSystem.java
@@ -19,13 +19,20 @@ package org.apache.velocity.runtime.log;
  * under the License.    
  */
 
+import org.apache.log4j.Appender;
 import org.apache.log4j.Category;
 import org.apache.log4j.Level;
-import org.apache.log4j.PatternLayout;
-import org.apache.log4j.RollingFileAppender;
+import org.apache.log4j.builders.appender.AppenderBuilder;
+import org.apache.log4j.builders.appender.RollingFileAppenderBuilder;
+import org.apache.log4j.config.PropertiesConfiguration;
+import org.apache.log4j.config.PropertiesConfigurationFactory;
+import org.apache.logging.log4j.core.LoggerContext;
+import org.apache.logging.log4j.core.config.ConfigurationSource;
 import org.apache.velocity.runtime.RuntimeConstants;
 import org.apache.velocity.runtime.RuntimeServices;
 
+import java.util.Properties;
+
 /**
  * <p><em>This class is deprecated in favor of the new {@link Log4JLogChute},
  * which makes use of Log4J's <code>Logger</code> rather than its deprecated
@@ -43,7 +50,7 @@ import org.apache.velocity.runtime.RuntimeServices;
 public class SimpleLog4JLogSystem implements LogSystem
 {
     private RuntimeServices rsvc = null;
-    private RollingFileAppender appender = null;
+    private Appender appender = null;
 
     /** log4java logging interface */
     protected Category logger = null;
@@ -122,11 +129,19 @@ public class SimpleLog4JLogSystem implements LogSystem
          */
         logger.setLevel(Level.DEBUG);
 
-        appender = new RollingFileAppender( new PatternLayout( "%d - %m%n"), logfile, true);
-
-        appender.setMaxBackupIndex( 1 );
-
-        appender.setMaximumFileSize( 100000 );
+        String name = (String) rsvc.getProperty("runtime.log.logsystem.log4j.category");
+        Properties props = new Properties();
+        props.setProperty("File", logfile);
+        props.setProperty("Threshold", "DEBUG");
+        props.setProperty("MaxBackupIndex", "1");
+        props.setProperty("MaxFileSize", "100000");
+        AppenderBuilder appenderBuilder = new RollingFileAppenderBuilder("", props);
+        PropertiesConfiguration configuration = (PropertiesConfiguration)
+                new PropertiesConfigurationFactory().getConfiguration(
+                        new LoggerContext(name), ConfigurationSource.NULL_SOURCE);
+
+        appender = appenderBuilder.parseAppender(name, "", "", "",
+                props, configuration);
 
         logger.addAppender(appender);
     }
-- 
2.34.1

